name: Telemetry System Tests

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Telemetry Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
    
    - name: Create test directories
      run: |
        mkdir -p test-results
        mkdir -p htmlcov
    
    - name: Run tests with pytest and generate coverage report
      run: |
        pytest tests/ \
          --junitxml=test-results/junit.xml \
          --cov=telemetry_toolkit \
          --cov-report=xml \
          --cov-report=html
    
    - name: Generate test summary
      if: always()  # Run even if tests fail
      run: |
        python scripts/generate_test_report.py
    
    - name: Upload test results
      if: always()  # Run even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          htmlcov/
          coverage.xml
          test_report.html
        retention-days: 5

  build:
    name: Build Distribution
    needs: test  # Only build after tests pass
    if: startsWith(github.ref, 'refs/tags/v')  # Only run for version tags
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          
      - name: Build package
        run: python -m build
        
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 5
          
  publish:
    name: Publish to PyPI
    needs: build  # Only publish after successful build
    if: startsWith(github.ref, 'refs/tags/v')  # Only run for version tags
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true